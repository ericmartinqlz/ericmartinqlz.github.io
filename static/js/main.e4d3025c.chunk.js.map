{"version":3,"sources":["scripts/components/PageHeader.js","assets/images/logo-512.png","scripts/components/Header.js","scripts/pages/Loading.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["PageHeader","props","className","page","Header","showNavbar","bind","hideNavbar","document","getElementsByTagName","classList","add","remove","onClick","this","to","src","logo","alt","navData","isActive","React","Component","Loading","About","lazy","Certificate","Timeline","Skill","Project","Contact","NotFound","App","basename","fallback","path","exact","element","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e4d3025c.chunk.js","sourcesContent":["function PageHeader(props) {\r\n  return(\r\n    <div className=\"PageHeader\">\r\n      <div className=\"dotline first\"></div>\r\n      <h2>{props.page}</h2>\r\n      <div className=\"dotline second\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageHeader;","export default __webpack_public_path__ + \"static/media/logo-512.cb1746f2.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport logo from '../../assets/images/logo-512.png'\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.showNavbar = this.showNavbar.bind(this);\r\n    this.hideNavbar = this.hideNavbar.bind(this);\r\n  }\r\n\r\n  showNavbar() {\r\n    document.getElementsByTagName('body')[0].classList.add('nav-show');\r\n  }\r\n  hideNavbar() {\r\n    document.getElementsByTagName('body')[0].classList.remove('nav-show');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div onClick={this.hideNavbar} className=\"black-screen\"></div>\r\n\r\n        {/* Appbar - Mobile Floating Button - Desktop Logo QLZ */}\r\n        <div className=\"AppBar\">\r\n          <div className=\"AppBar-Desktop\">\r\n            <NavLink to='/'>\r\n              <img src={logo} alt=\"\" />\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"AppBar-Mobile\">\r\n            <div onClick={this.showNavbar} className=\"floating-button ease-out\">\r\n              <i className=\"icon-navicon\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navbar - Mobile Bottom - Desktop Bottom Left */}\r\n        <nav className=\"ease-out\">\r\n          <ul>\r\n            <li>\r\n              <NavLink \r\n                to='/' \r\n                onClick={this.hideNavbar} \r\n                className={navData =>\r\n                  \"ease-out\" + (navData.isActive ? \" active-link\" : \"\")\r\n                }\r\n                >\r\n                <i className=\"icon icon-home\"></i>\r\n                <i className=\"icon-home-fill icon-fill\"></i>\r\n                <span>About Me</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink \r\n                to='/timeline' \r\n                onClick={this.hideNavbar} \r\n                className={navData =>\r\n                  \"ease-out\" + (navData.isActive ? \" active-link\" : \"\")\r\n                }\r\n                >\r\n                <i className=\"icon icon-timeline\"></i>\r\n                <i className=\"icon-timeline-fill icon-fill\"></i>\r\n                <span>Timeline</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink \r\n                to='/skill'  \r\n                onClick={this.hideNavbar} \r\n                className={navData =>\r\n                  \"ease-out\" + (navData.isActive ? \" active-link\" : \"\")\r\n                }\r\n                >\r\n                <i className=\"icon icon-skill\"></i>\r\n                <i className=\"icon-skill-fill icon-fill\"></i>\r\n                <span>Skill</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink \r\n                to='/certificate'  \r\n                onClick={this.hideNavbar} \r\n                className={navData =>\r\n                  \"ease-out\" + (navData.isActive ? \" active-link\" : \"\")\r\n                }\r\n                >\r\n                <i className=\"icon icon-certificate\"></i>\r\n                <i className=\"icon-certificate-fill icon-fill\"></i>\r\n                <span>Certificate</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink \r\n                to='/project'  \r\n                onClick={this.hideNavbar} \r\n                className={navData =>\r\n                  \"ease-out\" + (navData.isActive ? \" active-link\" : \"\")\r\n                }\r\n                >\r\n                <i className=\"icon icon icon-project\"></i>\r\n                <i className=\"icon-project-fill icon-fill\"></i>\r\n                <span>Project</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink \r\n                to='/contact'  \r\n                onClick={this.hideNavbar} \r\n                className={navData =>\r\n                  \"ease-out\" + (navData.isActive ? \" active-link\" : \"\")\r\n                }\r\n                >\r\n                <i className=\"icon icon-contact\"></i>\r\n                <i className=\"icon-contact-fill icon-fill\"></i>\r\n                <span>Contact</span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PageHeader from '../components/PageHeader';\r\n\r\nclass Loading extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.page = \"Loading\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PageDiv page-not-found\">\r\n        <PageHeader page={this.page}/>\r\n\r\n        <div className=\"PageMain\">\r\n          <section>\r\n            <h2>Loading...</h2>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loading;","import React, { Suspense } from 'react';\nimport {HashRouter, Routes, Route} from 'react-router-dom';\nimport './styles/App.css';\nimport './styles/Responsive.css';\nimport './assets/icons/css/EricMartinQLZ.css';\n\nimport Header from './scripts/components/Header';\nimport Loading from './scripts/pages/Loading';\n\nconst About = React.lazy(() => import('./scripts/pages/About'));\nconst Certificate = React.lazy(() => import('./scripts/pages/Certificate'));\nconst Timeline = React.lazy(() => import('./scripts/pages/Timeline'));\nconst Skill = React.lazy(() => import('./scripts/pages/Skill'));\nconst Project = React.lazy(() => import('./scripts/pages/Project'));\nconst Contact = React.lazy(() => import('./scripts/pages/Contact'));\nconst NotFound = React.lazy(() => import('./scripts/pages/NotFound'));\n\nfunction App() {\n  return (\n    <HashRouter\n    basename={'/'}>\n      <div className=\"App\">\n        {/* Header - Mobile Bottom - Desktop Left */}\n        <Header />\n\n        {/* Main Section / Title Page / Content */}\n        <main>\n          <Suspense fallback={<Loading />}>\n            <Routes>\n              <Route path={'/'} exact element={<About />} />\n              <Route path={'/timeline'} exact element={<Timeline />} />\n              <Route path={'/skill'} exact element={<Skill />}  />\n              <Route path={'/certificate'} exact element={<Certificate />} />\n              <Route path={'/project'} exact element={<Project />} />\n              <Route path={'/contact'} exact element={<Contact />} />\n              <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n          </Suspense>\n        </main>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}